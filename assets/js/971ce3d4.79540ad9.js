"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[580],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return h}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),h=n,f=d["".concat(l,".").concat(h)]||d[h]||p[h]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3745:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],s={id:"basic-tutorial",title:"Preface",hide_title:!0},l="Preface",c={unversionedId:"basics/basic-tutorial",id:"basics/basic-tutorial",title:"Preface",description:"About the basic tutorial",source:"@site/../cilib-docs/target/mdoc/basics/introduction.md",sourceDirName:"basics",slug:"/basics/basic-tutorial",permalink:"/docs/basics/basic-tutorial",draft:!1,tags:[],version:"current",frontMatter:{id:"basic-tutorial",title:"Preface",hide_title:!0},sidebar:"docs",previous:{title:"Related Work",permalink:"/docs/introduction/related-work"},next:{title:"RVar",permalink:"/docs/basics/rvar"}},u={},p=[{value:"About the basic tutorial",id:"about-the-basic-tutorial",level:2},{value:"Knowledge requirements",id:"knowledge-requirements",level:2},{value:"Categories of data-structures",id:"categories-of-data-structures",level:2}],d={toc:p};function h(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"preface"},"Preface"),(0,o.kt)("h2",{id:"about-the-basic-tutorial"},"About the basic tutorial"),(0,o.kt)("p",null,"This basic tutorial is aimed at walking you through the different parts of CILib (Computational Intelligence Library).\nCILib is written in Scala and familiarity with the language is recommended.\nScala is a JVM language which allows for the expression and usage of more advanced type system capabilities, which Java, nor the other JVM languages are able to provide."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://underscore.io/training/courses/essential-scala/"},"Essential Scala")," and ",(0,o.kt)("a",{parentName:"p",href:"https://underscore.io/training/courses/advanced-scala/"},"Advanced Scala With Cats")," are freely available, online Scala resources.\nIt should be noted that these resources recommend practices that are not always followed within CIlib.\nThe core CIlib development focus is ",(0,o.kt)("em",{parentName:"p"},"always")," to prefer a functional approach for implementation and avoid the use of object-orientation as much as possible.\nThe benefits obtained through this style of code far outweigh any perceived overhead!"),(0,o.kt)("blockquote",null,(0,o.kt)("h4",{parentName:"blockquote",id:"compiler-verified-code-samples"},"Compiler verified code samples"),(0,o.kt)("p",{parentName:"blockquote"},"Throughout the tutorial you will see a lot of theory along side practical examples represented through blocks of code.\nThese blocks of code are verified during the documentation processing and will always be up to date with the referenced version of CIlib.")),(0,o.kt)("h2",{id:"knowledge-requirements"},"Knowledge requirements"),(0,o.kt)("p",null,"The code samples that follow will reference various functional programmming abstractions.\nFirstly, let's state outright that these concepts are ",(0,o.kt)("strong",{parentName:"p"},"not scary"),", contrary the general misinformation that exists within the programming world.\nThe abstractions may be unfamiliar to you, which is fair, but this is nothing more than an oppurtunity to learn general programming language theory which is true regardless of the programming language being used \ud83d\ude04."),(0,o.kt)("p",null,"Functional programming structures (such as ",(0,o.kt)("inlineCode",{parentName:"p"},"Functor"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Applicative")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Monad"),") allow us to be clear and expressive by restricting what can and cannot be done with a given structure.\nFurthermore, these structures also predefine behaviour that is useful and enables better composition.\nFor example, knowing that a given structure has an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"Functor")," available will immediately inform us that this structure, regardless of what it is, can accpet a transformation function to transform the internal values."),(0,o.kt)("p",null,"We won't be focusing on this too much and it's not really all that important to use CIlib.\nIf you do, however, struggle with to follow the examples, please contact the developers online in order to aid you in understanding and to provide some references to resources that are helpful.\nYour questions may also result in updates to this tutorial, which you may also provide yourself by submitting a pull request \ud83c\udf89."),(0,o.kt)("h2",{id:"categories-of-data-structures"},"Categories of data-structures"),(0,o.kt)("p",null,"In the sections that follow, different data structures will be discussed.\nThe first few data-structures (",(0,o.kt)("inlineCode",{parentName:"p"},"RVar"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Step")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"StepS"),") are the main structures within CIlib and are the building blocks which allow for the expression of algorithms.\nAdditional data structures follow are important structures in their own right, but are suplimental when compared to the three core data strucutres.\nThe additional structures are closely related to algorithms, but are concerned with algorithm specifics instead of providing a computational platform."))}h.isMDXComponent=!0}}]);