<?xml version="1.0"?>

<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>

<simulator>
    <algorithms>
        <algorithm id="pso" class="pso.PSO">
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000" />
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy" entityNumber="50">
                <entityType class="pso.particle.StandardParticle" />
            </initialisationStrategy>
	    <iterationStrategy class="pso.iterationstrategies.SynchronousIterationStrategy">
                <boundaryConstraint class="problem.boundaryconstraint.BouncingBoundaryConstraint"/>
            </iterationStrategy>
        </algorithm>
    </algorithms>

    <problems>
        <problem id="revenue.total" class="problem.ClusteringProblem" domain="R(0.0,1.0)^11">
            <innerProblem class="problem.FunctionMinimisationProblem">
                <function class="functions.clustering.TotalErrorFunction" />
            </innerProblem>
            <dataSetBuilder class="problem.dataset.StaticDataSetBuilder" identifier="revenue">
                <addDataSet class="problem.dataset.LocalDataSet" identifier="../../datasets/revenue/revenue.csv" delimiter="," beginIndex="3" endIndex="13" />
            </dataSetBuilder>
        </problem>

        <problem id="revenue.harmonic" class="problem.ClusteringProblem" domain="R(0.0,1.0)^11">
            <innerProblem class="problem.FunctionMinimisationProblem">
                <function class="functions.clustering.KHarmonicMeansFunction" />
            </innerProblem>
            <dataSetBuilder class="problem.dataset.StaticDataSetBuilder" identifier="revenue">
                <addDataSet class="problem.dataset.LocalDataSet" identifier="../../datasets/revenue/revenue.csv" delimiter="," beginIndex="3" endIndex="13" />
            </dataSetBuilder>
        </problem>
    </problems>

    <measurements id="measurements" class="simulator.MeasurementSuite" resolution="100">
        <addMeasurement class="measurement.single.Fitness" />
        <addMeasurement class="measurement.single.clustering.PlotHighDimensionalClustersAndCentroids" />
<!--
        <addMeasurement class="measurement.single.clustering.NumberOfClustersFormed" />
        <addMeasurement class="measurement.single.GenericFunctionMeasurement">
            <function class="functions.clustering.TotalCompactnessFunction" />
        </addMeasurement>
        <addMeasurement class="measurement.single.GenericFunctionMeasurement">
            <function class="functions.clustering.TotalSeparationFunction" />
        </addMeasurement>

        <addMeasurement class="measurement.single.clustering.DataSetDiameter" />
        <addMeasurement class="measurement.single.clustering.SearchSpaceDiameter" />
        <addMeasurement class="measurement.single.clustering.ClusterVariances" />
        <addMeasurement class="measurement.single.clustering.ClusterStandardDeviations" />
        <addMeasurement class="measurement.single.clustering.ClusterMeans" />
        <addMeasurement class="measurement.single.clustering.ClusterCentroids" />
-->
    </measurements>
    <simulations>
        <simulation samples="1">
            <algorithm idref="pso"/>
            <problem idref="revenue.total" numberOfClusters="10" />
            <measurements idref="measurements" />
            <output format="TXT" file="measurements/pso.revenue.total.10.txt" />
        </simulation>

        <simulation samples="1">
            <algorithm idref="pso"/>
            <problem idref="revenue.harmonic" numberOfClusters="10" />
            <measurements idref="measurements" />
            <output format="TXT" file="measurements/pso.revenue.harmonic.10.txt" />
        </simulation>
    </simulations>
</simulator>
