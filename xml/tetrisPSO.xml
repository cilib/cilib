<?xml version="1.0"?>

<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>

<simulator>
    <problem id="tetris" class="problem.coevolution.GameLearningOptimizationProblem" numberOfEvaluations="2">
        <game class="games.game.tetris.Tetris" Width = "10" Height = "20" MaxLines = "10000000">
            <agent class="games.agent.state.StateEvaluationAgent">
                <traversalStrategy class="games.agent.state.traversal.MinMaxAlphaBetaTraversalStrategy" MaxDepth="1">
                    <evaluator class="games.agent.state.evaluation.NeuralStateEvaluator">
                        <neuralNetwork class="nn.NeuralNetwork">
                            <architecture class="nn.architecture.Architecture">
                                <architectureBuilder class="nn.architecture.builder.FeedForwardArchitectureBuilder">
                                    <addLayer class="nn.architecture.builder.LayerConfiguration"/> <!-- size is specified by neural input strategy-->
                                    <addLayer class="nn.architecture.builder.LayerConfiguration" size="1">
                                        <ActivationFunction class="functions.activation.TanH"/>
                                    </addLayer>
                                    <addLayer class="nn.architecture.builder.LayerConfiguration"> <!-- size is specified by output interpretation strategy-->
                                        <ActivationFunction class="functions.activation.TanH"/>
                                    </addLayer>
                                    <layerBuilder class="nn.architecture.builder.PrototypeFullyConnectedLayerBuilder" domain="R(-1,1)" />
                                </architectureBuilder>
                            </architecture>
                        </neuralNetwork>
                        <stateInputStrategy class="games.game.tetris.TetrisFeaturesInputStrategy" removedLines = "false"/>
                    </evaluator>
                </traversalStrategy>
            </agent>
            <scoringStrategy class="games.game.tetris.TetrisScoringStrategy"/>
            <seedingStrategy class = "games.random.FixedListSeedingStrategy" iterationModulus="40" useCount = "2">
                <Seed value="3944606586505461405"/>
                <Seed value="1000307146215334070"/>
                <Seed value="3143331892621272574"/>
                <Seed value="3622885855894700963"/>
                <Seed value="-2728089894524748394"/>
                <Seed value="847679055350624516"/>
                <Seed value="-4066316519530753120"/>
                <Seed value="-5718927913961735684"/>
                <Seed value="-5449352068366349146"/>
                <Seed value="1416821267114470034"/>
            </seedingStrategy>
        </game>
    </problem>

    <algorithms>
        <algorithm id="gcpso-vn" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy" entityNumber="30">
                <entityType class="pso.particle.StandardParticle">
                    <velocityProvider class="pso.velocityprovider.GCVelocityProvider"/>
                    <FitnessCalculator class = "util.calculator.PropertyBasedFitnessCalculator"/>
                </entityType>
            </initialisationStrategy>
            <topology class="entity.topologies.VonNeumannTopology" />
            <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition"/>
        </algorithm>
    </algorithms>

    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="1">
        <addMeasurement class="measurement.single.Fitness"/>
        <addMeasurement class="measurement.single.Solution"/>
    </measurements>

    <simulations>
        <simulation samples="1">
            <algorithm idref="gcpso-vn"/>
            <problem idref="tetris"/>
            <measurements idref="fitness"/>
            <output format="TXT" file="data/tetrisPSO.txt"/>
        </simulation>
    </simulations>
</simulator>
