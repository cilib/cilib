<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>
    <algorithms>
        <!--Crossover iteration strategy UNDX-->
        <algorithm id="xpso-undx-1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverStrategy class="entity.operators.crossover.UnimodalNormalDistributionCrossoverStrategy"/>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover velocity provider UNDX-->
        <algorithm id="xpso-undx-2" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <!--PBest cant be same as position for UNDX because of orthonormalize function-->
                    <personalBestInitialisationStrategy class="entity.initialization.RandomInitializationStrategy"/>
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                        <velocityProvider class="pso.velocityprovider.CrossoverVelocityProvider">
                            <crossoverStrategy class="entity.operators.crossover.UnimodalNormalDistributionCrossoverStrategy"/>
                        </velocityProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover gBest guide provider UNDX-->
        <algorithm id="xpso-undx-3" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <crossoverStrategy class="entity.operators.crossover.UnimodalNormalDistributionCrossoverStrategy"/>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover iteration strategy PCX-->
        <algorithm id="xpso-pcx-1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverStrategy class="entity.operators.crossover.ParentCentricCrossoverStrategy"/>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover velocity provider PCX-->
        <algorithm id="xpso-pcx-2" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                        <velocityProvider class="pso.velocityprovider.CrossoverVelocityProvider">
                            <crossoverStrategy class="entity.operators.crossover.ParentCentricCrossoverStrategy"/>
                        </velocityProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover gBest guide provider PCX-->
        <algorithm id="xpso-pcx-3" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <crossoverStrategy class="entity.operators.crossover.ParentCentricCrossoverStrategy"/>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover iteration strategy SPX-->
        <algorithm id="xpso-spx-1" class="pso.PSO">
            <iterationStrategy class="pso.iterationstrategies.PSOCrossoverIterationStrategy">
                <crossoverStrategy class="entity.operators.crossover.SimplexCrossoverStrategy"/>
            </iterationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover velocity provider SPX-->
        <algorithm id="xpso-spx-2" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <positionProvider class="pso.positionprovider.LinearPositionProvider"/>
                        <velocityProvider class="pso.velocityprovider.CrossoverVelocityProvider">
                            <crossoverStrategy class="entity.operators.crossover.SimplexCrossoverStrategy"/>
                        </velocityProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
        
        <!--Crossover gBest guide provider SPX-->
        <algorithm id="xpso-spx-3" class="pso.PSO">
            <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
                <entityType class="pso.particle.StandardParticle">
                    <particleBehavior class="pso.particle.ParticleBehavior">
                        <globalGuideProvider class="pso.guideprovider.CrossoverGuideProvider">
                            <crossoverStrategy class="entity.operators.crossover.SimplexCrossoverStrategy"/>
                        </globalGuideProvider>
                    </particleBehavior>
                </entityType>
            </initialisationStrategy>
            <addStoppingCondition class="stoppingcondition.MaximumIterations" maximumIterations="1000"/>
        </algorithm>
    </algorithms>
    
    <problems>
        <problem id="spherical" class="problem.FunctionMinimisationProblem" domain="R(-5.12, 5.12)^30">
            <function class="functions.continuous.unconstrained.Spherical"/>
        </problem>
    </problems>
    
    <measurements id="fitness" class="simulator.MeasurementSuite" resolution="1">
        <addMeasurement class="measurement.single.Fitness"/>
    </measurements>
    
    <simulations>
        <simulation samples="5">
            <algorithm idref="xpso-undx-1"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-undx-1-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-undx-2"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-undx-2-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-undx-3"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-undx-3-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-1"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-pcx-1-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-2"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-pcx-2-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-pcx-3"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-pcx-3-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-1"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-spx-1-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-2"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-spx-2-spherical.txt" />
        </simulation>
        <simulation samples="5">
            <algorithm idref="xpso-spx-3"/>
            <problem idref="spherical"/>
            <measurements idref="fitness" />
	        <output format="TXT" file="data/xpso-spx-3-spherical.txt" />
        </simulation>
    </simulations>
</simulator>
